# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fzGw5aRY7IH475A_NqR9zlzahUp8kmEg
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

from google.colab import drive
drive.mount('/content/drive')

file_path='/content/drive/My Drive/machine learning/headbrain.csv'
df=pd.read_csv(file_path)
print(df.head())

x = df['Head Size(cm^3)'].values
y = df['Brain Weight(grams)'].values
X = np.array(x)
Y = np.array(y)
mean_x = np.mean(X)
mean_y = np.mean(Y)
numerator = np.sum((X - mean_x) * (Y - mean_y))
denominator = np.sum((X - mean_x) ** 2)
w1 = numerator / denominator
w0 = mean_y - (w1 * mean_x)

print(f"Calculated coefficients: w1 = {w1:.4f}, w0 = {w0:.4f}")

def predict(x):
    return w0 + w1 * x
y_pred = predict(X)
plt.figure(figsize=(10,6))
plt.scatter(X, Y, color='blue', label='Actual data')
plt.plot(X, y_pred, color='red', label='Regression line')
plt.xlabel('Head Size (cm³)')
plt.ylabel('Brain Weight (grams)')
plt.title('Head Size vs Brain Weight')
plt.legend()
plt.grid(True)
plt.show()

mse = np.mean((Y - y_pred) ** 2)
print(f"Mean Squared Error: {mse:.4f}")

X_2D = X.reshape(-1, 1)
model = LinearRegression()
model.fit(X_2D, Y)

y_pred_sklearn = model.predict(X_2D)
mse_sklearn = mean_squared_error(Y, y_pred_sklearn)

print("\n[Scikit-learn Model]")
print(f"w1 (slope): {model.coef_[0]:.4f}")
print(f"w0 (intercept): {model.intercept_:.4f}")
print(f"Mean Squared Error (sklearn): {mse_sklearn:.4f}")

plt.figure(figsize=(10,6))
plt.scatter(X, Y, color='blue', label='Actual data')
plt.plot(X, y_pred_sklearn, color='green', label='Sklearn Regression line')
plt.xlabel('Head Size (cm³)')
plt.ylabel('Brain Weight (grams)')
plt.title('Sklearn Linear Regression')
plt.legend()
plt.grid(True)
plt.show()